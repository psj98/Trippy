<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.user.model.dao.UserDao">

	<resultMap type="userDto" id="user">
		<result column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="city_sido" property="citySido"/>
		<result column="city_gugun" property="cityGugun"/>
		<result column="grade_name" property="userGrade"/>
	</resultMap>
	
	<resultMap type="userDto" id="profile" extends="user">
		<collection property="fileInfos" column="article_no" javaType="list" ofType="fileInfoDto" select="fileInfoList"/>
	</resultMap>
	
	<resultMap type="fileInfoDto" id="file">
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>

	<select id="idCheck" parameterType="String" resultType="int">
		SELECT COUNT(id)
		FROM user
		WHERE id = #{id}
	</select>

	<insert id="joinUser" parameterType="userDto">
		INSERT INTO user (id, password, name, email_id, email_domain, city_sido, city_gugun)
		VALUES (#{id}, #{password}, #{name}, #{emailId}, #{emailDomain}, ${citySido}, ${cityGugun});
	</insert>
	
	<insert id="registerFile" parameterType="userDto">
		insert into file_info (user_id, save_folder, original_file, save_file)
		<foreach collection="fileInfos" item="fileinfo" separator=" , ">
			(#{id}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile})
		</foreach>
	</insert>

	<select id="loginUser" parameterType="string" resultType="userDto">
		SELECT id, password, name
		FROM user
		WHERE id = #{id}
	</select>
	
	<select id="selectUser" parameterType="string" resultMap="user">
		SELECT u.id, u.name, u.email_id, u.email_domain, u.city_sido, u.city_gugun, g.grade_name
		FROM user u, grade g
		WHERE id = #{id}
		AND u.user_grade = g.user_grade
	</select>
	
	<update id="updateUser" parameterType="userDto">
		UPDATE user
		SET name = #{name}, email_id = #{emailId}, email_domain = #{emailDomain}, city_sido = #{citySido}, city_gugun = #{cityGugun}
		WHERE id = #{id}
	</update>
	
	<update id="updatePw" parameterType="userDto">
		UPDATE user
		SET password = #{password}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteUser" parameterType="String">
		DELETE FROM comment
		WHERE user_id = #{id};
		
		DELETE FROM comment
		WHERE (board_type, article_no) IN (SELECT board_type, article_no FROM article WHERE user_id = #{id});
		
		DELETE FROM article
		WHERE user_id = #{id};
		
		DELETE FROM user
		WHERE id = #{id};
	</delete>
	
	<!-- <insert id="createRefreshToken" parameterType="map">
		INSERT INTO token (id, token)
		VALUES (#{id}, #{token})
	</insert> -->
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user
		where id = #{id}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where id = #{id}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where id = #{id}
	</update>
	
</mapper>